<Window x:Class="SwissKnife.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SwissKnife"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        Title="{DynamicResource t_maintitle}"
        AllowsTransparency="True"
        Style="{StaticResource AquaStyle}"
        Height="450"
        Width="580"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Background="Transparent"
        ResizeMode="NoResize"
        WindowStyle="None"
        FontWeight="Normal"
        FontFamily="{Binding Source={StaticResource TextStyle}, Path=FontFamily}"
        FontSize="16"
        FontStyle="Normal"
        WindowStartupLocation="CenterScreen"
        MouseLeftButtonDown="DragMode">

    <!--///////////////////////////////RESOURCES///////////////////////////////-->
    <Window.Resources>
        <local:CommonViewModel x:Key="commonViewModel" />
        <local:BuildViewModel x:Key="buildViewModel" />
        <local:SettingsViewModel x:Key="settingsViewModel" />
        <local:RulesViewModel x:Key="rulesViewModel" />
    </Window.Resources>
    <!--///////////////////////////////RESOURCES///////////////////////////////-->

    <!--CONTENT-->
    <Grid>
        <Path Stroke="{StaticResource HeaderBack}"
              Fill="{StaticResource WindowMainBackColor}">
            <Path.Data>
                <PathGeometry>
                    <PathFigure IsClosed="True"
                                StartPoint="0,0">
                        <LineSegment Point="0,362" />
                        <ArcSegment  Point="8,370"
                                     Size="8,8" />
                        <LineSegment Point="542,370" />
                        <ArcSegment  Point="550,362"
                                     Size="8,8" />
                        <LineSegment Point="550,0" />
                    </PathFigure>
                </PathGeometry>
            </Path.Data>
        </Path>

        <Border x:Name="BackGroundFullScreen"
                Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=Width}"
                Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=Height}"
                Background="{StaticResource WindowMainBackColor}"
                Visibility="Hidden" />

        <Grid VerticalAlignment="Top"
              HorizontalAlignment="Center"
              Width="510"
              Margin="20,10,20,10">
            <Rectangle x:Name="Vaska"
                       RadiusX="6"
                       RadiusY="6"
                       Fill="#FF252526"
                       Margin="0,30,0,5"/>
            <TabControl x:Name="TabPanel"
                        HorizontalAlignment="Center"
                        Width="520"
                        Height="340"
                        Background="{x:Null}"
                        BorderBrush="{x:Null}">

                <TabItem Header="{DynamicResource t_tabassemble}"
                         Style="{DynamicResource TabItemCustom}"
                         Width="Auto"
                         Height="25"
                         Padding="0,5,0,0">
                    <Grid>
                        
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10" />
                            <RowDefinition />
                            <RowDefinition Height="10" />
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="1">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="300*" />
                                <ColumnDefinition Width="100*" />
                            </Grid.ColumnDefinitions>
                            
                            <Grid Grid.Column="1">
                                <StackPanel x:Name="stackPanelButton"
                                            VerticalAlignment="Stretch"
                                            Margin="0,20,20,0">
                                    <Button Name="Rebuild"
                                            Style="{DynamicResource CommonButtonCustom}"
                                            Margin="0,0,0,10"
                                            Height="50"
                                            AllowDrop="True"
                                            Command="{Binding Source={StaticResource buildViewModel}, Path=Rebuild}"
                                            Background="{DynamicResource {x:Static SystemColors.GradientActiveCaptionBrushKey}}"
                                            Content="{DynamicResource t_construct}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Drop">
                                                <i:InvokeCommandAction Command="{Binding Source={StaticResource buildViewModel}, Path=InputDrop}"
                                                                       PassEventArgsToCommand="True" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>

                                    <StackPanel>
                                        <TextBlock Text="{DynamicResource t_ruleslist}" 
                                                   Margin="0,0,0,5"
                                                   Foreground="DimGray"
                                                   TextAlignment="Center"/>
                                        <ListBox Background="Transparent"
                                                 Foreground="Gray"
                                                 SelectionMode="Single"
                                                 ItemsSource="{Binding Source={StaticResource rulesViewModel}, Path=RulesPresets}"
                                                 MaxHeight="140"
                                                 MinHeight="20">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="SelectionChanged">
                                                    <i:InvokeCommandAction Command="{Binding Source={StaticResource buildViewModel}, Path=ChangeRule}"
                                                                           PassEventArgsToCommand="True" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ListBox>
                                        <Button x:Name="RemoveRule"
                                                Style="{StaticResource SettingsButton}"
                                                Content="{DynamicResource t_removerule}" 
                                                Height="30"
                                                Margin="0,5,0,0"
                                                Command="{Binding Source={StaticResource buildViewModel}, Path=RemoveRule}"/>
                                    </StackPanel>
                                </StackPanel>
                            </Grid>

                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0.4*"
                                                   MinHeight="80"/>
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="*"
                                                   MinHeight="50"/>
                                </Grid.RowDefinitions>

                                <GridSplitter Grid.Row="1"
                                              ShowsPreview="False"
                                              Height="5"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="center"
                                              Margin="15,10">
                                    <GridSplitter.Background>
                                        <DrawingBrush TileMode="Tile"
                                                      Opacity="75"
                                                      Viewport="0,0,0.05,1">
                                            <DrawingBrush.Drawing>
                                                <DrawingGroup>
                                                    <GeometryDrawing Brush="{StaticResource WindowMainBackColor}">
                                                        <GeometryDrawing.Geometry>
                                                            <RectangleGeometry RadiusX="0.1"
                                                                               RadiusY="0.1"
                                                                               Rect="2,1,3,1" />
                                                        </GeometryDrawing.Geometry>
                                                    </GeometryDrawing>
                                                    <GeometryDrawing Brush="{StaticResource BlackButtonContent}">
                                                        <GeometryDrawing.Geometry>
                                                            <RectangleGeometry RadiusX="0.1"
                                                                               RadiusY="0.1"
                                                                               Rect="1,1,1.5,1" />
                                                        </GeometryDrawing.Geometry>
                                                    </GeometryDrawing>
                                                </DrawingGroup>
                                            </DrawingBrush.Drawing>
                                        </DrawingBrush>
                                    </GridSplitter.Background>
                                </GridSplitter>

                                <Grid Grid.Row="0">
                                    <TextBox x:Name="InputText"
                                             MinHeight="50"
                                             VerticalAlignment="Top"
                                             VerticalScrollBarVisibility="Auto"
                                             Margin="25,20,20,10"
                                             AllowDrop="True"
                                             TextWrapping="Wrap"
                                             Text="{Binding Source={StaticResource buildViewModel}, Path=InputText}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="GotFocus">
                                                <i:InvokeCommandAction Command="{Binding Source={StaticResource buildViewModel}, Path=InputFocus}" />
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="PreviewDrop">
                                                <i:InvokeCommandAction Command="{Binding Source={StaticResource buildViewModel}, Path=InputDrop}"
                                                                       PassEventArgsToCommand="True" />
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="PreviewDragOver">
                                                <i:InvokeCommandAction Command="{Binding Source={StaticResource buildViewModel}, Path=DragEnterFile}"
                                                                       PassEventArgsToCommand="True" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </Grid>
                                <Grid Grid.Row="2">
                                    <TextBox x:Name="OutputText"
                                         Text="{Binding Source={StaticResource buildViewModel}, Path=OutputText}"
                                         VerticalAlignment="Top"
                                         VerticalScrollBarVisibility="Auto"
                                         MinHeight="20"
                                         Margin="35,10,20,10"
                                         TextWrapping="WrapWithOverflow" />
                                </Grid>
                            </Grid>
                        </Grid>
                    </Grid>
                </TabItem>

                <TabItem Header="{DynamicResource t_tabrules}"
                         Style="{DynamicResource TabItemCustom}"
                         Width="Auto"
                         Height="25"
                         Padding="0,5,0,0">
                    <Grid HorizontalAlignment="Center">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="4*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="0.3*" />
                        </Grid.RowDefinitions>
                        <StackPanel Orientation="Horizontal"
                                    HorizontalAlignment="Center"
                                    Margin="0,5,0,0">
                            <Grid>
                                <RichTextBox x:Name="TextEditor"
                                             IsEnabled="True"
                                             Visibility="Hidden"
                                             AllowDrop="True"
                                             Width="370"
                                             Height="185"
                                             VerticalAlignment="Top"
                                             Margin="10,15,10,15"
                                             VerticalScrollBarVisibility="Auto">
                                    <RichTextBox.Resources>
                                        <Style TargetType="{x:Type Paragraph}">
                                            <Setter Property="Margin"
                                                    Value="0" />
                                        </Style>
                                    </RichTextBox.Resources>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Loaded">
                                            <i:InvokeCommandAction Command="{Binding Source={StaticResource rulesViewModel}, Path=RichEditorLoaded}"
                                                                   CommandParameter="{Binding ElementName=TextEditor}" />
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="DragEnter">
                                            <i:ChangePropertyAction TargetObject="{Binding ElementName=DropZone}"
                                                                    PropertyName="Visibility"
                                                                    Value="Visible" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </RichTextBox>

                                <Button Grid.Row="0"
                                        x:Name="DropZone"
                                        Style="{StaticResource DropPanel}"
                                        VerticalAlignment="Top"
                                        HorizontalAlignment="Center"
                                        Width="380"
                                        Height="195"
                                        Margin="5,10,5,0"
                                        AllowDrop="True">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Drop">
                                            <i:InvokeCommandAction Command="{Binding Source={StaticResource rulesViewModel}, Path=TextFileDrop}"
                                                                   PassEventArgsToCommand="True" />
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="Loaded">
                                            <i:InvokeCommandAction Command="{Binding Source={StaticResource rulesViewModel}, Path=DropPanelLoaded}"
                                                                   CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}}" />
                                        </i:EventTrigger>
                                        <i:DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=Visibility}"
                                                       Value="Hidden">
                                            <i:ChangePropertyAction TargetObject="{Binding ElementName=TextEditor}"
                                                                    PropertyName="Visibility"
                                                                    Value="Visible" />
                                        </i:DataTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                            </Grid>

                            <StackPanel Margin="5,10,5,10">
                                <Button Name="OpenFile"
                                        Style="{DynamicResource SettingsButton}"
                                        Margin="5"
                                        Width="80"
                                        Height="45"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Command="{Binding Source={StaticResource rulesViewModel}, Path=OpenFile}">
                                    <TextBlock Text="{DynamicResource t_openlist}"
                                               TextWrapping="Wrap"
                                               TextAlignment="Center"
                                               Margin="5,0,5,0" />
                                </Button>

                                <Button Name="LoadRule"
                                        Style="{DynamicResource SettingsButton}"
                                        Margin="5"
                                        Width="80"
                                        Height="45"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Top"
                                        Command="{Binding Source={StaticResource settingsViewModel}, Path=RulesPresetLoad}">
                                    <TextBlock Text="{DynamicResource t_loadrules}"
                                               TextAlignment="Center"
                                               TextWrapping="Wrap" />
                                </Button>
                                
                                <Button Name="SaveRules"
                                        Style="{DynamicResource SettingsButton}"
                                        Margin="5"
                                        Width="80"
                                        Height="45"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Top"
                                        Command="{Binding Source={StaticResource rulesViewModel}, Path=RulesPresetSave}">
                                    <TextBlock Text="{DynamicResource t_saverules}"
                                               TextAlignment="Center"
                                               TextWrapping="Wrap" />
                                </Button>

                                <TextBlock Text="{Binding Source={StaticResource rulesViewModel}, Path=CurrentTitle}"
                                           TextWrapping="Wrap"
                                           TextAlignment="Center"
                                           Margin="0,5,0,10"
                                           Background="{StaticResource WindowMainBackColor}"
                                           Foreground="{StaticResource BlackButtonContent}"
                                           Width="80"
                                           Height="20" />
                            </StackPanel>
                        </StackPanel>

                        <Grid Grid.Row="1">
                            
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            
                            <Button x:Name="Mark"
                                    Grid.Column="0"
                                    Width="100"
                                    Height="50"
                                    Command="{Binding Source={StaticResource rulesViewModel}, Path=Mark}"
                                    Style="{DynamicResource CommonButtonCustom}">
                                <TextBlock Text="{DynamicResource t_marktheword}"
                                           TextAlignment="Center"
                                           TextWrapping="Wrap" />
                            </Button>
                            <Button x:Name="Unmark"
                                    Grid.Column="1"
                                    Width="100"
                                    Height="50"
                                    Style="{DynamicResource CommonButtonCustom}"
                                    Command="{Binding Source={StaticResource rulesViewModel}, Path=Unmark}">
                                <TextBlock Text="{DynamicResource t_unmarktheWord}"
                                           TextWrapping="Wrap"
                                           TextAlignment="Center" />
                            </Button>
                            <Button x:Name="AssignSeparator"
                                    Grid.Column="2"
                                    Height="50"
                                    Width="100"
                                    Style="{DynamicResource CommonButtonCustom}"
                                    Command="{Binding Source={StaticResource rulesViewModel}, Path=AssignSeparator}">
                                <TextBlock Text="{DynamicResource t_assignseparator}"
                                           TextWrapping="Wrap"
                                           TextAlignment="Center" />
                            </Button>
                            <Button x:Name="MakeRule"
                                    Grid.Column="3"
                                    Width="100"
                                    Height="50"
                                    Command="{Binding Source={StaticResource rulesViewModel}, Path=MakeRule}"
                                    Style="{DynamicResource CommonButtonCustom}">
                                <TextBlock Text="{DynamicResource t_makerule}"
                                           TextWrapping="Wrap"
                                           TextAlignment="Center" />
                            </Button>
                        </Grid>
                    </Grid>
                </TabItem>

                <TabItem Header="{DynamicResource t_tabsettings}"
                         Style="{DynamicResource TabItemCustom}"
                         Foreground="{StaticResource WindowMainBackColor}"
                         Width="Auto"
                         Height="25"
                         Padding="0,5,0,0">
                    <Grid>
                        
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"
                                              MinWidth="180" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*"
                                              MinWidth="180" />
                        </Grid.ColumnDefinitions>

                        <GridSplitter Grid.Column="1"
                                      ShowsPreview="False"
                                      Width="10"
                                      Background="{StaticResource WindowMainBackColor}"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Stretch" />
                        <StackPanel Grid.Column="0">
                            <Button x:Name="LanguageButton"
                                    Style="{StaticResource SettingsButton}"
                                    Content="{DynamicResource t_language}"
                                    Margin="15,20,15,0"
                                    Height="45"
                                    Padding="5"
                                    Background="Transparent"
                                    Command="{Binding Source={StaticResource settingsViewModel}, Path=LanguageButtonClick}"
                                    FontSize="16" />
                            <Button x:Name="ThemeButton"
                                    Style="{StaticResource SettingsButton}"
                                    Content="{DynamicResource t_theme}"
                                    Margin="15,20,15,0"
                                    Height="45"
                                    Padding="5"
                                    Command="{Binding Source={StaticResource settingsViewModel}, Path=ThemeButtonClick}"
                                    Background="Transparent" />
                        </StackPanel>

                        <StackPanel Grid.Column="3"
                                    Margin="10"
                                    Width="150">
                            <Frame x:Name="MenuSettings"
                                   NavigationUIVisibility="Hidden">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Loaded">
                                        <i:InvokeCommandAction Command="{Binding Source={StaticResource settingsViewModel}, Path=SettingsMenuLoaded}"
                                                               CommandParameter="{Binding ElementName=MenuSettings}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Frame>
                        </StackPanel>
                    </Grid>
                </TabItem>
            </TabControl>
        </Grid>
    </Grid>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding Source={StaticResource commonViewModel}, Path=LanguageLoaded}"
                                   PassEventArgsToCommand="False" />
            <i:InvokeCommandAction Command="{Binding Source={StaticResource rulesViewModel}, Path=RulesPresetLoad}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <!--MainContent-->
</Window>

